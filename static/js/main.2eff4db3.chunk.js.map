{"version":3,"sources":["components/Menu/MenuIcon/MenuIcon.jsx","components/Nav/Nav.jsx","components/Home/Home.jsx","components/Heading/Heading.jsx","components/Portfolio/PortfolioItem/PortfolioItem.jsx","components/Portfolio/Portfolio.jsx","components/Button/Button.jsx","components/Contact/Contact.jsx","client.js","components/Nav/NavLink/NavLink.jsx","components/Menu/Menu.jsx","components/Footer/Footer.jsx","App.jsx","serviceWorker.js","index.js","images/dev.svg","images/shake.svg"],"names":["MenuIcon","handleClick","menuOpen","className","onClick","Nav","setMenuOpen","div","id","initial","opacity","animate","transition","duration","scroll","scrollToTop","contentVariants","translateX","when","Home","name","variants","to","hashSpy","spy","smooth","delay","offset","translateY","yoyo","Infinity","src","man","alt","Heading","text","style","PortfolioItem","title","active","setSelected","Portfolio","projects","useState","selected","data","setData","projectList","setProjectList","console","log","useEffect","tempList","map","category","includes","push","list","filter","project","data-aos","padding","key","length","item","index","img","asset","url","tagline","repositoryUrl","href","icon","faGithubSquare","size","marginRight","faUserLock","liveUrl","target","rel","faExternalLinkSquareAlt","Button","type","loading","faSpinner","spin","Contact","INITIAL_VALUES","email","message","notification","setNotification","values","setValues","setLoading","form","useRef","sendEmail","a","handleSubmit","event","preventDefault","handleChange","value","marginBottom","shakeImage","onSubmit","ref","onChange","placeholder","required","color","marginTop","sanityClient","projectId","dataset","useCdn","NavLink","path","activeClass","Menu","Footer","width","App","setProjects","setServices","setTestimonials","fetch","then","tempTestimonials","tempProjects","tempServices","doc","country","catch","error","Aos","init","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.2eff4db3.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst MenuIcon = ({ handleClick, menuOpen }) => {\r\n  return (\r\n    <div\r\n      className={\"menu-icon \" + (menuOpen && \"menuActive\")}\r\n      onClick={handleClick}\r\n    >\r\n      <span className={\"line1 \" + (menuOpen && \"menuActive\")}></span>\r\n      <span className={\"line2 \" + (menuOpen && \"menuActive\")}></span>\r\n      <span className={\"line3 \" + (menuOpen && \"menuActive\")}></span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MenuIcon;\r\n","import React from \"react\";\r\n\r\n// Animation\r\nimport { motion } from \"framer-motion\";\r\nimport { animateScroll as scroll } from \"react-scroll\";\r\n\r\n// Styles\r\nimport \"./nav.css\";\r\n\r\n// Components\r\nimport MenuIcon from \"components/Menu/MenuIcon/MenuIcon\";\r\n\r\nconst Nav = ({ menuOpen, setMenuOpen }) => {\r\n  const handleClick = () => {\r\n    setMenuOpen(!menuOpen);\r\n  };\r\n\r\n  return (\r\n    <div className={\"nav-wrapper \" + (menuOpen && \"menuActive\")}>\r\n      <motion.div\r\n        id=\"navbar\"\r\n        className={\"nav-container\"}\r\n        initial={{\r\n          opacity: 0,\r\n        }}\r\n        animate={{\r\n          opacity: 1,\r\n        }}\r\n        transition={{\r\n          duration: 1.5,\r\n        }}\r\n      >\r\n        <span\r\n          className={\"logo \" + (menuOpen && \"menuActive\")}\r\n          onClick={() => scroll.scrollToTop()}\r\n        >\r\n          Sai Pavan Tadem\r\n        </span>\r\n\r\n        <MenuIcon handleClick={handleClick} menuOpen={menuOpen} />\r\n      </motion.div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","import React from \"react\";\r\n\r\n// SVG\r\nimport man from \"images/dev.svg\";\r\n\r\n// Animation\r\nimport { Link } from \"react-scroll\";\r\nimport { motion } from \"framer-motion\";\r\n\r\n// CSS\r\nimport \"./home.css\";\r\n\r\nconst contentVariants = {\r\n  initial: {\r\n    translateX: \"-100vw\",\r\n    opacity: 0,\r\n  },\r\n\r\n  animate: {\r\n    translateX: \"0vw\",\r\n    opacity: 1,\r\n    transition: {\r\n      duration: 2,\r\n      when: \"beforeChildren\",\r\n    },\r\n  },\r\n};\r\n\r\nconst Home = () => {\r\n  return (\r\n    <section className=\"home-container\" id=\"home\" name=\"home\">\r\n      <motion.div\r\n        className=\"content\"\r\n        variants={contentVariants}\r\n        initial=\"initial\"\r\n        animate=\"animate\"\r\n      >\r\n        <h1>I’m Sai</h1>\r\n        <p>Graduate student with dedicated research interests in Deep Learning and\r\nComputer Vision. </p>\r\n        <Link\r\n          className=\"home-btn\"\r\n          to={\"portfolio\"}\r\n          hashSpy={true}\r\n          spy={true}\r\n          smooth={true}\r\n          delay={100}\r\n          offset={-100}\r\n          duration={500}\r\n        >\r\n          See My Work\r\n        </Link>\r\n      </motion.div>\r\n\r\n      <motion.div\r\n        className=\"svg\"\r\n        animate={{ translateY: [-20, 0, -20, 0] }}\r\n        transition={{ yoyo: Infinity, duration: 6 }}\r\n      >\r\n        <img src={man} alt=\"Developer\" />\r\n      </motion.div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport \"./heading.css\";\r\n\r\nexport const Heading = ({ text, style }) => {\r\n  return (\r\n    <div className=\"heading-container\" style={style}>\r\n      <h2 className=\"heading\">{text}</h2>\r\n      <span></span>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\n// Styles\r\nimport \"./portfolio-item.css\";\r\n\r\nconst PortfolioItem = ({ title, active, setSelected, id }) => {\r\n  return (\r\n    <div\r\n      className={\"portfolio-item \" + (active && \"active\")}\r\n      onClick={() => setSelected(id)}\r\n    >\r\n      {title}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PortfolioItem;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\n// Styles\r\nimport \"./portfolio.css\";\r\n\r\n// components\r\nimport { Heading } from \"components/Heading/Heading\";\r\n\r\n// Icons\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nimport { faExternalLinkSquareAlt } from \"@fortawesome/free-solid-svg-icons/faExternalLinkSquareAlt\";\r\nimport { faGithubSquare } from \"@fortawesome/free-brands-svg-icons/faGithubSquare\";\r\nimport { faUserLock } from \"@fortawesome/free-solid-svg-icons/faUserLock\";\r\n\r\nimport PortfolioItem from \"./PortfolioItem/PortfolioItem\";\r\n\r\nconst Portfolio = ({ projects }) => {\r\n  const [selected, setSelected] = useState(\"featured\");\r\n  const [data, setData] = useState([]);\r\n  const [projectList, setProjectList] = useState([]);\r\n\r\n  console.log(projectList,'list')\r\n  useEffect(() => {\r\n    let tempList = [];\r\n    projects.map(({ category }) => {\r\n      if (!tempList.includes(category)) {\r\n        tempList.push(category);\r\n      }\r\n\r\n      return null;\r\n    });\r\n    setProjectList(tempList);\r\n  }, [projects]);\r\n\r\n  useEffect(() => {\r\n    projectList.map((list) => {\r\n      if (selected === list) {\r\n        setData(projects.filter((project) => project.category === list));\r\n      }\r\n\r\n      return null;\r\n    });\r\n  }, [selected, projectList, projects]);\r\n  console.log(projects)\r\n  return (\r\n    <section\r\n      data-aos=\"fade-left\"\r\n      className=\"portfolio\"\r\n      name=\"portfolio\"\r\n      id=\"portfolio\"\r\n    >\r\n      <Heading text=\"Projects\" style={{ padding: \"3rem\" }} />\r\n      <div className=\"list\">\r\n        {projectList &&\r\n          projectList.map((list) => (\r\n            <PortfolioItem\r\n              title={list}\r\n              key={list}\r\n              active={selected === list}\r\n              setSelected={setSelected}\r\n              id={list}\r\n            />\r\n          ))}\r\n      </div>\r\n      <div className=\"row\">\r\n        {data.length &&\r\n          data.map((item, index) => (\r\n            <div className=\"column\" key={index}>\r\n              <img src={item?.img.asset.url} alt={item.title} />\r\n              <div className=\"overlay\">\r\n                <div className=\"left\">\r\n                  <h3>{item.title}</h3>\r\n                  {item.tagline && <p>{item.tagline}</p>}\r\n                </div>\r\n                <div className=\"right\">\r\n                  {item.repositoryUrl !== \"private\" ? (\r\n                    <a href={item.repositoryUrl}>\r\n                      <FontAwesomeIcon\r\n                        icon={faGithubSquare}\r\n                        size=\"2x\"\r\n                        className=\"icon\"\r\n                        style={{ marginRight: \"0.3em\" }}\r\n                        title=\"Github Repo\"\r\n                      />\r\n                    </a>\r\n                  ) : (\r\n                    <a href=\"#_\">\r\n                      <FontAwesomeIcon\r\n                        icon={faUserLock}\r\n                        size=\"2x\"\r\n                        className=\"icon\"\r\n                        style={{ marginRight: \"0.3em\" }}\r\n                        title=\"Private Repo\"\r\n                      />\r\n                    </a>\r\n                  )}\r\n\r\n                  <a\r\n                    href={item.liveUrl}\r\n                    target=\"_blank\"\r\n                    rel=\"noopener noreferrer\"\r\n                  >\r\n                    <FontAwesomeIcon\r\n                      icon={faExternalLinkSquareAlt}\r\n                      size=\"2x\"\r\n                      className=\"icon\"\r\n                      title=\"Live view\"\r\n                    />\r\n                  </a>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Portfolio;\r\n","import React from \"react\";\r\n\r\n// Styles\r\nimport \"./button.css\";\r\n\r\n// Icons\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSpinner } from \"@fortawesome/free-solid-svg-icons/faSpinner\";\r\n\r\nconst Button = ({ type, style, text, onClick, loading }) => {\r\n  return (\r\n    <button type={type} className=\"button\" style={style} onClick={onClick}>\r\n      {loading && (\r\n        <FontAwesomeIcon icon={faSpinner} size=\"sm\" spin className=\"icon\" />\r\n      )}\r\n      <span className={loading ? \"none\" : \"\"}>{text}</span>\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React, { useState, useRef } from \"react\";\r\n\r\n// Styles\r\nimport \"./contact.css\";\r\n\r\n// Email Js\r\n// import emailjs from \"emailjs-com\";\r\n\r\n// image\r\nimport shakeImage from \"../../images/shake.svg\";\r\n\r\n// Components\r\nimport { Heading } from \"../Heading/Heading\";\r\nimport Button from \"components/Button/Button\";\r\n\r\nconst Contact = () => {\r\n  const INITIAL_VALUES = { email: \"\", message: \"\" };\r\n  const [notification, setNotification] = useState(false);\r\n  const [values, setValues] = useState(INITIAL_VALUES);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // Email-js\r\n  const form = useRef();\r\n\r\n  const sendEmail = async () => {\r\n    try {\r\n      // const result = await emailjs.sendForm(\r\n      //   `gmail`,\r\n      //   `emailjs`,\r\n      //   form.current,\r\n      //   `user_Ar1zI6cvC6aUG82I1aNsA`\r\n      // );\r\n      // console.log(\"result \", result.text);\r\n    } catch (error) {\r\n      console.log(\"ERROR\", error);\r\n    }\r\n  };\r\n  // Email-js\r\n\r\n  const clearForm = () => {\r\n    setValues(INITIAL_VALUES);\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    // console.log(\"form submitted !\", values);\r\n    // TODO : Send data to your email\r\n    setLoading(true);\r\n    await sendEmail();\r\n    setLoading(false);\r\n    clearForm();\r\n    setNotification(true);\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    setValues({\r\n      ...values,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <section className=\"contact\" name=\"contact\" id=\"contact\">\r\n      <Heading text=\"Contact\" style={{ marginBottom: \"3rem\" }} />\r\n      <div className=\"content\">\r\n        <div className=\"left\">\r\n          <img src={shakeImage} alt=\"shake hands\" />\r\n        </div>\r\n        <div className=\"right\">\r\n          <form onSubmit={handleSubmit} ref={form}>\r\n            <input\r\n              type=\"email\"\r\n              name=\"email\"\r\n              value={values.email}\r\n              onChange={handleChange}\r\n              placeholder=\"Email\"\r\n              required\r\n            />\r\n            <textarea\r\n              name=\"message\"\r\n              required\r\n              value={values.message}\r\n              onChange={handleChange}\r\n              placeholder=\"Message\"\r\n            ></textarea>\r\n            <Button\r\n              text={loading ? \"Sending...\" : \"Send\"}\r\n              loading={loading}\r\n              type=\"submit\"\r\n            />\r\n            {notification && (\r\n              <span style={{ color: \"green\", marginTop: \"1rem\" }}>\r\n                Thanks, I will reply ASAP \r\n              </span>\r\n            )}\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Contact;\r\n","import sanityClient from \"@sanity/client\";\r\n\r\nexport default sanityClient({\r\n  projectId: \"fxul9ln3\", // find this at manage.sanity.io or in your sanity.json\r\n  dataset: \"production\", // this is from those question during 'sanity init'\r\n  useCdn: true,\r\n});\r\n","import React from \"react\";\r\n\r\n// Router\r\nimport { Link } from \"react-scroll\";\r\n\r\nexport const NavLink = ({ path, text, onClick }) => (\r\n  <li className=\"link\">\r\n    <Link\r\n      className=\"anchor\"\r\n      activeClass=\"active\"\r\n      to={path}\r\n      hashSpy={true}\r\n      spy={true}\r\n      smooth={true}\r\n      onClick={onClick}\r\n      delay={100}\r\n      offset={-70}\r\n      duration={500}\r\n    >\r\n      {text}\r\n    </Link>\r\n  </li>\r\n);\r\n","import React from \"react\";\r\nimport \"./menu.css\";\r\n// Router\r\nimport { NavLink } from \"components/Nav/NavLink/NavLink\";\r\n\r\nexport const Menu = ({ menuOpen, setMenuOpen }) => {\r\n  return (\r\n    <div className={\"menu \" + (menuOpen && \"active\")}>\r\n      <ul>\r\n        <NavLink text=\"Home\" path=\"home\" onClick={() => setMenuOpen(false)} />\r\n        {/* <NavLink\r\n          text=\"Services\"\r\n          path=\"services\"\r\n          onClick={() => setMenuOpen(false)}\r\n        /> */}\r\n        <NavLink\r\n          text=\"Projects\"\r\n          path=\"portfolio\"\r\n          onClick={() => setMenuOpen(false)}\r\n        />\r\n        {/* <NavLink\r\n          text=\"Testimonials\"\r\n          path=\"testimonials\"\r\n          onClick={() => setMenuOpen(false)}\r\n        /> */}\r\n        <NavLink\r\n          text=\"Contact\"\r\n          path=\"contact\"\r\n          onClick={() => setMenuOpen(false)}\r\n        />\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react'\r\nimport './footer.css'\r\nconst Footer = () => {\r\n  return (\r\n    <div className='footer'>\r\n         <hr/>\r\n         <div className=\"footer__icons\" style={{width: \"100%\", padding: \"10px\"}}>\r\n            <ul>\r\n\r\n            </ul>\r\n         </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Footer","import React, { useEffect, useState } from \"react\";\r\n\r\n// Components\r\nimport Nav from \"components/Nav/Nav\";\r\nimport Home from \"components/Home/Home\";\r\nimport Portfolio from \"components/Portfolio/Portfolio\";\r\nimport Contact from \"components/Contact/Contact\";\r\n// import Services from \"components/Services/Services\";\r\n// import Testimonials from \"components/Testimonials/Testimonials\";\r\n\r\n// Sanity\r\nimport sanityClient from \"client\";\r\n\r\n// Animation\r\nimport Aos from \"aos\";\r\nimport \"aos/dist/aos.css\";\r\n\r\n// Components\r\nimport { Menu } from \"./components/Menu/Menu\";\r\nimport Footer from \"./components/Footer/Footer\";\r\n\r\nfunction App() {\r\n  const [menuOpen, setMenuOpen] = useState(false);\r\n  const [projects, setProjects] = useState([]);\r\n  const [services, setServices] = useState([]);\r\n\r\n  const [testimonials, setTestimonials] = useState([]);\r\n\r\n  useEffect(() => {\r\n    sanityClient\r\n      .fetch(\r\n        `*[_type in [\"testimonial\", \"portfolio\",\"service\"]]{\r\n          _type == \"testimonial\" => {\r\n            id,\r\n            name,\r\n            text,\r\n            country,\r\n            url\r\n          },\r\n          _type == \"portfolio\" => {\r\n            id,\r\n            title,\r\n            tagline,\r\n            category,\r\n            liveUrl,\r\n            repositoryUrl,\r\n            img{\r\n              asset->{url}\r\n            },\r\n          },\r\n          _type == \"service\" => {\r\n            title,\r\n            tags,\r\n            icon{\r\n              asset->{url}\r\n            },\r\n          },\r\n        }\r\n        `\r\n      )\r\n      .then((data) => {\r\n        let tempTestimonials = [];\r\n        let tempProjects = [];\r\n        let tempServices = [];\r\n\r\n        data.map((doc) => {\r\n          if (doc.country) {\r\n            // It is a testimonial\r\n            tempTestimonials.push(doc);\r\n          } else if (doc.liveUrl) {\r\n            // It is a project\r\n            tempProjects.push(doc);\r\n          } else {\r\n            tempServices.push(doc);\r\n          }\r\n\r\n          return null;\r\n        });\r\n        setTestimonials(tempTestimonials);\r\n        setProjects(tempProjects);\r\n        setServices(tempServices);\r\n      })\r\n      .catch(console.error);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    Aos.init({ duration: 2000, offset: 10 });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"app-container\">\r\n      <Nav menuOpen={menuOpen} setMenuOpen={setMenuOpen} />\r\n      <Menu menuOpen={menuOpen} setMenuOpen={setMenuOpen} />\r\n      <Home />\r\n      {/* <Services services={services} /> */}\r\n      <Portfolio projects={projects} />\r\n      {/* <Testimonials testimonials={testimonials} /> */}\r\n      <Contact />\r\n      <Footer/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/dev.20e45d9a.svg\";","module.exports = __webpack_public_path__ + \"static/media/shake.e324d300.svg\";"],"sourceRoot":""}